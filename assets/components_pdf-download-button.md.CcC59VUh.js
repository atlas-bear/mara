import{_ as i,c as t,o as s,ag as e}from"./chunks/framework.BONmpqY0.js";const k=JSON.parse('{"title":"PDF Download Button Component","description":"","frontmatter":{},"headers":[],"relativePath":"components/pdf-download-button.md","filePath":"components/pdf-download-button.md"}'),n={name:"components/pdf-download-button.md"};function o(l,a,r,h,p,d){return s(),t("div",null,a[0]||(a[0]=[e(`<h1 id="pdf-download-button-component" tabindex="-1">PDF Download Button Component <a class="header-anchor" href="#pdf-download-button-component" aria-label="Permalink to &quot;PDF Download Button Component&quot;">​</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>The PDF Download Button component provides PDF generation and download functionality for reports in the MARA system. It has been simplified to use only browser-based PDF generation using html2canvas and jsPDF, which has proven more reliable than the server-side approach.</p><h2 id="functionality" tabindex="-1">Functionality <a class="header-anchor" href="#functionality" aria-label="Permalink to &quot;Functionality&quot;">​</a></h2><p>The component generates PDFs directly in the browser using html2canvas and jsPDF:</p><ul><li>Captures the page content as a high-quality image</li><li>Adds a header with the report ID and optional client logo</li><li>Converts to PDF format and offers it as a download</li></ul><h2 id="implementation-details" tabindex="-1">Implementation Details <a class="header-anchor" href="#implementation-details" aria-label="Permalink to &quot;Implementation Details&quot;">​</a></h2><h3 id="component-location" tabindex="-1">Component Location <a class="header-anchor" href="#component-location" aria-label="Permalink to &quot;Component Location&quot;">​</a></h3><p>The component is located at <code>/src/shared/components/PDFDownloadButton/index.jsx</code> and is used across different applications for generating downloadable PDF reports.</p><h3 id="technical-approach" tabindex="-1">Technical Approach <a class="header-anchor" href="#technical-approach" aria-label="Permalink to &quot;Technical Approach&quot;">​</a></h3><p>The browser-based generation works by:</p><ol><li>Taking a screenshot of the page content using html2canvas</li><li>Adding a header with the report ID and optional logo</li><li>Converting to PDF format using jsPDF</li><li>Offering it as a download</li></ol><h3 id="architecture-decision" tabindex="-1">Architecture Decision <a class="header-anchor" href="#architecture-decision" aria-label="Permalink to &quot;Architecture Decision&quot;">​</a></h3><p>Server-side PDF generation functionality has been removed from the main app in favor of the browser-based approach because:</p><ol><li>It works reliably across all environments</li><li>It eliminates the dependency on serverless functions</li><li>It avoids the complexity of maintaining Puppeteer in serverless environments</li><li>It removes the need for Cloudinary API integration</li></ol><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><p>To use the PDF Download Button in a component:</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PDFDownloadButton </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@mara/shared/components/PDFDownloadButton&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ReportPage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;report-content&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Report content goes here */</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PDFDownloadButton</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        contentId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;report-content&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        fileName</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Weekly-Report-2023-10&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        reportId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;WR-2023-10&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Prop</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>contentId</td><td>string</td><td>ID of the DOM element to capture as PDF</td></tr><tr><td>fileName</td><td>string</td><td>Name of the downloaded file (without .pdf extension)</td></tr><tr><td>reportId</td><td>string</td><td>ID to display in the PDF header</td></tr><tr><td>logo</td><td>string</td><td>Optional URL to client logo for the PDF header</td></tr></tbody></table><h2 id="dependencies" tabindex="-1">Dependencies <a class="header-anchor" href="#dependencies" aria-label="Permalink to &quot;Dependencies&quot;">​</a></h2><ul><li>html2canvas: For capturing DOM content as canvas</li><li>jsPDF: For converting canvas to PDF</li><li>React: For component lifecycle and state management</li></ul><h2 id="future-improvements" tabindex="-1">Future Improvements <a class="header-anchor" href="#future-improvements" aria-label="Permalink to &quot;Future Improvements&quot;">​</a></h2><p>If needed, consider:</p><ol><li>Extracting the PDF generation logic into a separate utility for reuse</li><li>Adding options to customize PDF output (paper size, orientation, margins)</li><li>Improving styling for better print output</li><li>Adding progress indicators for large reports</li></ol>`,25)]))}const g=i(n,[["render",o]]);export{k as __pageData,g as default};
