import{_ as i,c as t,o as a,ag as r}from"./chunks/framework.BONmpqY0.js";const u=JSON.parse('{"title":"Deduplication System","description":"","frontmatter":{},"headers":[],"relativePath":"deduplication/index.md","filePath":"deduplication/index.md"}'),s={name:"deduplication/index.md"};function n(o,e,l,c,d,h){return a(),t("div",null,e[0]||(e[0]=[r('<h1 id="deduplication-system" tabindex="-1">Deduplication System <a class="header-anchor" href="#deduplication-system" aria-label="Permalink to &quot;Deduplication System&quot;">​</a></h1><p>The MARA deduplication system operates at two levels to identify and merge duplicate maritime incident reports. This system enhances data quality, prevents duplicate alerts, and provides a comprehensive view of maritime incidents.</p><h2 id="two-layer-deduplication-approach" tabindex="-1">Two-Layer Deduplication Approach <a class="header-anchor" href="#two-layer-deduplication-approach" aria-label="Permalink to &quot;Two-Layer Deduplication Approach&quot;">​</a></h2><p>MARA implements a robust two-layer deduplication strategy:</p><ol><li><p><strong>Raw Data Level (Cross-Source)</strong>: Identifies and merges duplicate reports from different maritime reporting sources (RECAAP, UKMTO, MDAT, ICC) in the raw data table.</p></li><li><p><strong>Incident Level</strong>: Prevents creating duplicate incidents when raw data deduplication didn&#39;t merge reports (for example, when reports come in at different times).</p></li></ol><h2 id="purpose" tabindex="-1">Purpose <a class="header-anchor" href="#purpose" aria-label="Permalink to &quot;Purpose&quot;">​</a></h2><p>Maritime incidents are often reported by multiple organizations, with each source providing slightly different details about the same event. The deduplication system:</p><ol><li>Identifies likely matches across different reporting sources</li><li>Determines which record is more complete/authoritative</li><li>Merges complementary information</li><li>Maintains relationships between merged records</li></ol><h2 id="key-features" tabindex="-1">Key Features <a class="header-anchor" href="#key-features" aria-label="Permalink to &quot;Key Features&quot;">​</a></h2><ul><li><strong>Multi-dimensional matching</strong>: Uses time, location, vessel details, incident type, location names, and incident details for similarity scoring</li><li><strong>Source-aware processing</strong>: Accounts for differences in data completeness across reporting sources</li><li><strong>Merge chain tracking</strong>: Follows chains of merged records to prevent incorrect re-merging</li><li><strong>Incident link preservation</strong>: Maintains relationships to incidents in the incident table when merging records</li><li><strong>Configurable confidence thresholds</strong>: Adjustable scoring system to control merge aggressiveness</li><li><strong>Complementary data merging</strong>: Intelligently combines information from multiple sources</li><li><strong>Source attribution preservation</strong>: Maintains references to original sources</li><li><strong>Background processing</strong>: Runs automatically as scheduled Netlify functions</li></ul><h2 id="system-architecture" tabindex="-1">System Architecture <a class="header-anchor" href="#system-architecture" aria-label="Permalink to &quot;System Architecture&quot;">​</a></h2><p>The deduplication system consists of:</p><ol><li><strong>Background Function</strong>: <code>deduplicate-cross-source-background.js</code> scheduled in Netlify</li><li><strong>Utility Modules</strong>: <ul><li><code>spatial-utils.js</code>: Geographical and temporal proximity calculations</li><li><code>similarity-utils.js</code>: Text and entity matching algorithms</li><li><code>deduplication-utils.js</code>: Record scoring and merging logic</li></ul></li><li><strong>Integration with Reference Data</strong>: Uses cached incident type data for better matching</li></ol><h2 id="workflow" tabindex="-1">Workflow <a class="header-anchor" href="#workflow" aria-label="Permalink to &quot;Workflow&quot;">​</a></h2><ol><li><strong>Record Selection</strong>: Fetches recent raw_data records (last 30 days)</li><li><strong>Source Grouping</strong>: Groups records by source to ensure cross-source comparisons only</li><li><strong>Merge Chain Verification</strong>: Checks existing merge relationships to respect prior decisions</li><li><strong>Similarity Analysis</strong>: <ul><li>Calculates time proximity (hours between incidents)</li><li>Calculates spatial proximity (kilometers between coordinates)</li><li>Compares vessel details when available</li><li>Analyzes incident type similarities</li><li>Checks location name matches</li><li>Identifies matching stolen items and incident details</li></ul></li><li><strong>Match Identification</strong>: Identifies potential matches above configurable threshold</li><li><strong>Primary Record Selection</strong>: Determines most complete/authoritative record</li><li><strong>Data Merging</strong>: Combines complementary information from matched records</li><li><strong>Record Updating</strong>: Updates Airtable records with merged data and relationship links</li><li><strong>Processing Trigger</strong>: Triggers the incident processing system after completion</li></ol><h2 id="similarity-scoring" tabindex="-1">Similarity Scoring <a class="header-anchor" href="#similarity-scoring" aria-label="Permalink to &quot;Similarity Scoring&quot;">​</a></h2><p>Similarity scores are calculated on a scale of 0.0 to 1.0, with higher scores indicating higher confidence in a match:</p><ul><li><strong>Time Proximity</strong>: 1.0 for same time, 0.0 for incidents ≥48 hours apart</li><li><strong>Spatial Proximity</strong>: 1.0 for same location, 0.0 for incidents ≥50km apart</li><li><strong>Vessel Similarity</strong>: Based on vessel name and IMO number matches</li><li><strong>Incident Type Similarity</strong>: Compares incident categorization</li></ul><p>The overall similarity formula prioritizes time and location while accommodating source-specific data patterns:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>totalScore = (timeScore * 0.4) + (spatialScore * 0.4) + (vesselScore * 0.1) + (incidentTypeScore * 0.1)</span></span></code></pre></div><p>Matches with a score ≥0.7 are considered candidates for merging.</p><h2 id="special-handling-for-missing-data" tabindex="-1">Special Handling for Missing Data <a class="header-anchor" href="#special-handling-for-missing-data" aria-label="Permalink to &quot;Special Handling for Missing Data&quot;">​</a></h2><p>The system is designed to handle source-specific data patterns:</p><ul><li>When both records lack vessel information (typical for ICC, MDAT, and UKMTO sources), a default vessel similarity score is assigned</li><li>Records with matching IMO numbers are given maximum vessel similarity regardless of other factors</li><li>Missing incident type data is handled gracefully with reference data lookups</li></ul><h2 id="data-fields" tabindex="-1">Data Fields <a class="header-anchor" href="#data-fields" aria-label="Permalink to &quot;Data Fields&quot;">​</a></h2><p>The deduplication system uses and updates the following fields in the raw_data table:</p><h3 id="tracking-fields" tabindex="-1">Tracking Fields <a class="header-anchor" href="#tracking-fields" aria-label="Permalink to &quot;Tracking Fields&quot;">​</a></h3><ul><li><strong>merge_status</strong>: Indicates merge status (&quot;merged&quot;, &quot;merged_into&quot;, or empty)</li><li><strong>merged_into</strong>: Links to primary record (for secondary records)</li><li><strong>related_raw_data</strong>: Links to secondary records (for primary records)</li><li><strong>merge_score</strong>: JSON metadata about the merge operation</li></ul><h3 id="standard-fields-used-for-matching" tabindex="-1">Standard Fields Used for Matching <a class="header-anchor" href="#standard-fields-used-for-matching" aria-label="Permalink to &quot;Standard Fields Used for Matching&quot;">​</a></h3><ul><li><strong>date</strong>: Incident date/time</li><li><strong>latitude/longitude</strong>: Geographical coordinates</li><li><strong>vessel_name</strong>: Vessel name (when available)</li><li><strong>vessel_imo</strong>: IMO number (when available)</li><li><strong>incident_type_name</strong>: Incident categorization</li><li><strong>source</strong>: Source system name</li></ul><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><p>The deduplication system can be configured through environment variables and query parameters:</p><ul><li><strong>Scheduling</strong>: Set in <code>netlify.toml</code> (default: runs hourly)</li><li><strong>Confidence threshold</strong>: Default 0.7, configurable via queryString</li><li><strong>PUBLIC_URL</strong>: Required for triggering the processing function</li><li><strong>Record limit</strong>: Default 100, configurable via queryString</li></ul><h2 id="process-integration" tabindex="-1">Process Integration <a class="header-anchor" href="#process-integration" aria-label="Permalink to &quot;Process Integration&quot;">​</a></h2><h3 id="cross-source-deduplication-workflow" tabindex="-1">Cross-Source Deduplication Workflow <a class="header-anchor" href="#cross-source-deduplication-workflow" aria-label="Permalink to &quot;Cross-Source Deduplication Workflow&quot;">​</a></h3><p>The raw data deduplication system runs before incident processing:</p><ol><li><code>deduplicate-cross-source-background.js</code> processes raw data to identify and merge duplicates</li><li>Upon completion, it triggers <code>process-raw-data-background.js</code> to create incident records</li><li>This sequence ensures duplicates are merged before incident creation</li></ol><h3 id="incident-level-deduplication-workflow" tabindex="-1">Incident-Level Deduplication Workflow <a class="header-anchor" href="#incident-level-deduplication-workflow" aria-label="Permalink to &quot;Incident-Level Deduplication Workflow&quot;">​</a></h3><p>The incident-level deduplication occurs during record processing:</p><ol><li>When <code>process-raw-data-background.js</code> processes a record, it first checks if the record is part of a merge chain</li><li>If it&#39;s part of a chain, it follows the chain to find the primary record and checks if it&#39;s linked to an incident</li><li>If no chain exists, it searches for similar existing incidents using enhanced similarity criteria: <ul><li>Time and location proximity</li><li>Vessel details matching</li><li>Incident type comparison</li><li>Location name matching</li><li>Stolen items/details comparison</li></ul></li><li>If a match is found, it updates the existing incident with any new information</li><li>The raw data record is linked to the existing incident rather than creating a duplicate</li><li>This prevents duplicate flash reports for the same incident, even when raw data comes from different sources at different times</li></ol><h2 id="manual-operation" tabindex="-1">Manual Operation <a class="header-anchor" href="#manual-operation" aria-label="Permalink to &quot;Manual Operation&quot;">​</a></h2><p>For testing or manual operation, the function can be triggered with:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://your-netlify-site.netlify.app/.netlify/functions/deduplicate-cross-source-background&quot;</span></span></code></pre></div><p>With optional query parameters:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://your-netlify-site.netlify.app/.netlify/functions/deduplicate-cross-source-background?dryRun=true&amp;confidenceThreshold=0.75&quot;</span></span></code></pre></div>',45)]))}const g=i(s,[["render",n]]);export{u as __pageData,g as default};
