import{_ as a,c as s,o as n,ag as e}from"./chunks/framework.BONmpqY0.js";const u=JSON.parse('{"title":"MARA Project Architecture","description":"","frontmatter":{},"headers":[],"relativePath":"guide/architecture.md","filePath":"guide/architecture.md"}'),t={name:"guide/architecture.md"};function l(o,i,p,r,c,d){return n(),s("div",null,i[0]||(i[0]=[e(`<h1 id="mara-project-architecture" tabindex="-1">MARA Project Architecture <a class="header-anchor" href="#mara-project-architecture" aria-label="Permalink to &quot;MARA Project Architecture&quot;">​</a></h1><h2 id="project-overview" tabindex="-1">Project Overview <a class="header-anchor" href="#project-overview" aria-label="Permalink to &quot;Project Overview&quot;">​</a></h2><p>MARA (Multi-source Analysis and Reporting Architecture) is a monorepo project consisting of multiple applications that share common functionality. The project follows a modern JavaScript architecture using React, Vite, Tailwind CSS, and Netlify for deployment.</p><h2 id="repository-structure" tabindex="-1">Repository Structure <a class="header-anchor" href="#repository-structure" aria-label="Permalink to &quot;Repository Structure&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>mara/</span></span>
<span class="line"><span>├── .git/                      # Git repository metadata</span></span>
<span class="line"><span>├── .netlify/                  # Netlify configuration and cache</span></span>
<span class="line"><span>├── data/                      # Data files and resources</span></span>
<span class="line"><span>├── docs-vitepress/            # Project documentation (VitePress)</span></span>
<span class="line"><span>├── functions/                 # Netlify serverless functions for the main app</span></span>
<span class="line"><span>├── scripts/                   # Utility scripts for the project</span></span>
<span class="line"><span>├── src/</span></span>
<span class="line"><span>│   ├── apps/                  # Contains individual applications</span></span>
<span class="line"><span>│   │   ├── mara/              # Main MARA application</span></span>
<span class="line"><span>│   │   │   ├── components/    # App-specific components</span></span>
<span class="line"><span>│   │   │   ├── config/        # Configuration files</span></span>
<span class="line"><span>│   │   │   ├── hooks/         # Custom React hooks</span></span>
<span class="line"><span>│   │   │   ├── layouts/       # Layout components</span></span>
<span class="line"><span>│   │   │   ├── routes/        # Route components</span></span>
<span class="line"><span>│   │   │   └── utils/         # Utility functions</span></span>
<span class="line"><span>│   │   └── client/            # White-labeled client application</span></span>
<span class="line"><span>│   │       ├── functions/     # Client-specific Netlify functions</span></span>
<span class="line"><span>│   │       ├── src/           # Client app source code</span></span>
<span class="line"><span>│   │       └── netlify.toml   # Client-specific Netlify configuration</span></span>
<span class="line"><span>│   └── shared/                # Shared components and utilities</span></span>
<span class="line"><span>│       ├── components/        # Common UI components used across apps</span></span>
<span class="line"><span>│       │   └── MaritimeMap/   # Shared map component</span></span>
<span class="line"><span>│       └── features/          # Feature modules that encapsulate business logic and UI</span></span>
<span class="line"><span>│           └── weekly-report/ # Weekly report feature module</span></span>
<span class="line"><span>│               ├── components/# Feature-specific components</span></span>
<span class="line"><span>│               ├── utils/     # Feature-specific utilities</span></span>
<span class="line"><span>│               └── index.js   # Public exports for the feature</span></span>
<span class="line"><span>├── .env                       # Environment variables (not committed)</span></span>
<span class="line"><span>├── .gitignore                 # Git ignore configuration</span></span>
<span class="line"><span>├── netlify.toml               # Main Netlify configuration</span></span>
<span class="line"><span>├── package.json               # Root package.json for workspace management</span></span>
<span class="line"><span>└── turbo.json                 # Turborepo configuration</span></span></code></pre></div><h2 id="technology-stack" tabindex="-1">Technology Stack <a class="header-anchor" href="#technology-stack" aria-label="Permalink to &quot;Technology Stack&quot;">​</a></h2><ul><li><strong>Frontend Framework</strong>: React with functional components and hooks</li><li><strong>Build Tool</strong>: Vite for fast development and optimized production builds</li><li><strong>Styling</strong>: Tailwind CSS for utility-first styling</li><li><strong>Package Management</strong>: NPM Workspaces for monorepo organization</li><li><strong>Build Orchestration</strong>: Turborepo for efficient builds across packages</li><li><strong>Deployment</strong>: Netlify for both apps and serverless functions</li><li><strong>Maps</strong>: Mapbox GL JS for interactive maps</li><li><strong>Charts</strong>: Recharts for data visualization</li><li><strong>Networking</strong>: Axios for API calls</li><li><strong>Data Sources</strong>: Airtable as the backend database</li><li><strong>AI Integration</strong>: Claude for intelligent data analysis</li><li><strong>Email Delivery</strong>: SendGrid for email notifications</li><li><strong>Cache Storage</strong>: Netlify Blob Storage for caching</li><li><strong>Authentication</strong>: JWT-based token system</li></ul><h2 id="applications" tabindex="-1">Applications <a class="header-anchor" href="#applications" aria-label="Permalink to &quot;Applications&quot;">​</a></h2><h3 id="mara-application" tabindex="-1">MARA Application <a class="header-anchor" href="#mara-application" aria-label="Permalink to &quot;MARA Application&quot;">​</a></h3><p>The main MARA application is the central intelligence platform that includes:</p><ul><li>Flash reporting capabilities</li><li>Weekly maritime security reports</li><li>Incident tracking and analysis</li><li>Interactive mapping</li><li>Data visualization</li></ul><p><strong>Key Components</strong>:</p><ul><li>Incident visualization and management</li><li>Flash report generation</li><li>Weekly reporting tools</li><li>Geospatial analysis</li></ul><p><strong>Main Routes</strong>:</p><p><strong>Weekly Report (/weekly-report/:yearWeek)</strong></p><ul><li>Comprehensive weekly analysis of maritime security incidents</li><li>Regional breakdowns with threat assessments</li><li>Interactive incident map</li><li>Trend analysis and historical data</li></ul><p><strong>Flash Report (/flash-report/:incidentId)</strong></p><ul><li>Immediate incident notifications</li><li>Email alerts via SendGrid integration</li><li>Detailed incident analysis</li><li>Interactive incident location mapping</li></ul><p><strong>Entry Point</strong>: <code>src/apps/mara/main.jsx</code></p><h3 id="client-application" tabindex="-1">Client Application <a class="header-anchor" href="#client-application" aria-label="Permalink to &quot;Client Application&quot;">​</a></h3><p>The client application is a white-labeled version that provides specific functionality to client organizations:</p><ul><li>Focused on weekly maritime security reports</li><li>Client-branded interface</li><li>Simplified feature set</li><li>Custom Netlify functions</li></ul><p><strong>Key Components</strong>:</p><ul><li>Weekly reporting interface</li><li>Client-specific styling</li><li>Restricted feature set</li></ul><p><strong>Main Routes</strong>:</p><p><strong>Weekly Report (/:yearWeek)</strong></p><ul><li>White-labeled version of the weekly maritime security report</li><li>Client-branded interface</li><li>Regional incident analysis and mapping</li><li>Focused feature set for client needs</li></ul><p><strong>Entry Point</strong>: <code>src/apps/client/src/main.jsx</code></p><h2 id="shared-architecture" tabindex="-1">Shared Architecture <a class="header-anchor" href="#shared-architecture" aria-label="Permalink to &quot;Shared Architecture&quot;">​</a></h2><h3 id="components" tabindex="-1">Components <a class="header-anchor" href="#components" aria-label="Permalink to &quot;Components&quot;">​</a></h3><p>Shared components are stored in <code>src/shared/components</code> and include basic UI elements that are used across applications:</p><ul><li><code>MaritimeMap</code>: Interactive map component for displaying maritime incidents</li><li><code>PDFDownloadButton</code>: Browser-based PDF generation for reports</li><li>Other UI components as needed</li></ul><h3 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h3><p>Feature modules in <code>src/shared/features</code> encapsulate complete features that can be imported by any application:</p><ul><li><code>weekly-report/</code>: Weekly report generation and display <ul><li>Components for different sections of the report (ExecutiveBrief, RegionalBrief, IncidentDetails)</li><li>Utilities for date handling and data fetching</li><li>API integration</li></ul></li></ul><p>Each feature module follows this structure:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>feature-name/</span></span>
<span class="line"><span>├── components/     # React components specific to this feature</span></span>
<span class="line"><span>├── utils/          # Utility functions for this feature</span></span>
<span class="line"><span>└── index.js        # Public API exports</span></span></code></pre></div><h2 id="data-flow" tabindex="-1">Data Flow <a class="header-anchor" href="#data-flow" aria-label="Permalink to &quot;Data Flow&quot;">​</a></h2><ol><li><strong>API Layer</strong>: Netlify functions act as a secure API layer</li><li><strong>Data Fetching</strong>: Client-side data fetching using Axios</li><li><strong>State Management</strong>: React useState and useEffect for component state</li><li><strong>Shared Logic</strong>: Common business logic in shared utilities</li><li><strong>Rendering</strong>: Component rendering with data passed via props</li></ol><h2 id="data-processing-pipeline" tabindex="-1">Data Processing Pipeline <a class="header-anchor" href="#data-processing-pipeline" aria-label="Permalink to &quot;Data Processing Pipeline&quot;">​</a></h2><p>MARA employs a sophisticated data processing pipeline to transform raw incident data from various sources into coherent, deduplicated incident records:</p><ol><li><strong>Data Collection</strong>: Scheduled functions collect data from various maritime sources (RECAAP, UKMTO, MDAT, ICC)</li><li><strong>Deduplication</strong>: The cross-source deduplication system identifies and merges duplicate reports</li><li><strong>Processing</strong>: Raw data is processed to standardize formats and extract key information</li><li><strong>Incident Creation</strong>: Processed data is used to create comprehensive incident records</li><li><strong>Reporting</strong>: Incidents are analyzed and compiled into Flash Reports and Weekly Reports</li></ol><p>For detailed information about the data pipeline, see the <a href="/mara/data-pipeline/">Data Pipeline documentation</a>.</p><h2 id="functions-configuration" tabindex="-1">Functions Configuration <a class="header-anchor" href="#functions-configuration" aria-label="Permalink to &quot;Functions Configuration&quot;">​</a></h2><p>Netlify Functions require specific configuration in the <code>netlify.toml</code> file:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">functions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">directory = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;functions&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">node_bundler = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;esbuild&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Scheduled functions</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">functions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;collect-recaap&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">schedule = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0,30 * * * *&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">functions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;process-incidents&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">schedule = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;25,55 * * * *&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">functions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;deduplicate-cross-source-background&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">schedule = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;28 * * * *&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">background = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">functions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;get-weekly-report-content-background&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">schedule = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0 21 * * 1&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">background = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div><p>This configuration:</p><ul><li>Specifies the directory containing function code</li><li>Uses esbuild for bundling Node.js functions, which handles dependencies more effectively</li><li>Schedules several types of functions to run at specified intervals: <ul><li>Data collection functions to fetch from maritime sources</li><li>Deduplication function to identify and merge duplicate reports</li><li>Processing function to transform raw data into incident records</li><li>Weekly report generation function to run at 21:00 UTC on Mondays</li></ul></li></ul><h3 id="function-dependencies" tabindex="-1">Function Dependencies <a class="header-anchor" href="#function-dependencies" aria-label="Permalink to &quot;Function Dependencies&quot;">​</a></h3><p>Each function can have its own package.json to manage dependencies:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>functions/</span></span>
<span class="line"><span>└── get-weekly-incidents/</span></span>
<span class="line"><span>    ├── index.js</span></span>
<span class="line"><span>    └── package.json  # Optional but recommended for dependency management</span></span></code></pre></div><h2 id="environment-configuration" tabindex="-1">Environment Configuration <a class="header-anchor" href="#environment-configuration" aria-label="Permalink to &quot;Environment Configuration&quot;">​</a></h2><p>Each application requires specific environment variables:</p><h3 id="mara-app" tabindex="-1">MARA App <a class="header-anchor" href="#mara-app" aria-label="Permalink to &quot;MARA App&quot;">​</a></h3><ul><li><code>VITE_MAPBOX_TOKEN</code>: Mapbox GL token for map rendering</li><li><code>AT_BASE_ID_CSER</code>: Airtable base ID for CSER database</li><li><code>AT_API_KEY</code>: Airtable API key</li><li><code>ANTHROPIC_API_KEY</code>: Claude API key for AI analysis</li><li><code>PUBLIC_URL</code>: Public URL for the application</li><li><code>SENDGRID_API_KEY</code>: SendGrid API key for email delivery</li><li><code>NETLIFY_BLOB_INSERT_URL</code>: URL for Netlify Blob Storage insert operations</li><li><code>NETLIFY_BLOB_READ_URL</code>: URL for Netlify Blob Storage read operations</li></ul><h3 id="client-app" tabindex="-1">Client App <a class="header-anchor" href="#client-app" aria-label="Permalink to &quot;Client App&quot;">​</a></h3><ul><li><code>VITE_MAPBOX_TOKEN</code>: Mapbox GL token</li><li><code>AT_BASE_ID_CSER</code>: Airtable base ID</li><li><code>AT_API_KEY</code>: Airtable API key</li><li><code>VITE_CLIENT_NAME</code>: Client name for branding</li><li><code>VITE_CLIENT_PRIMARY_COLOR</code>: Brand primary color</li><li><code>VITE_CLIENT_SECONDARY_COLOR</code>: Brand secondary color</li><li><code>VITE_CLIENT_LOGO</code>: Client logo URL</li></ul><h2 id="build-and-deployment" tabindex="-1">Build and Deployment <a class="header-anchor" href="#build-and-deployment" aria-label="Permalink to &quot;Build and Deployment&quot;">​</a></h2><h3 id="development-workflow" tabindex="-1">Development Workflow <a class="header-anchor" href="#development-workflow" aria-label="Permalink to &quot;Development Workflow&quot;">​</a></h3><ol><li><p>Run the dev server for a specific app using Turbo:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm run dev -- --filter @mara/app</span></span>
<span class="line"><span># or</span></span>
<span class="line"><span>npm run dev -- --filter @mara/client</span></span></code></pre></div></li><li><p>Use Netlify Dev for local function testing:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>netlify dev</span></span></code></pre></div></li></ol><h3 id="production-builds" tabindex="-1">Production Builds <a class="header-anchor" href="#production-builds" aria-label="Permalink to &quot;Production Builds&quot;">​</a></h3><ul><li>Each application has its own Netlify site</li><li>Builds are triggered by commits to the main branch</li><li>Environment variables are managed in Netlify&#39;s UI</li><li>Functions are deployed alongside the application</li></ul><h2 id="adding-a-new-white-label-client" tabindex="-1">Adding a New White-Label Client <a class="header-anchor" href="#adding-a-new-white-label-client" aria-label="Permalink to &quot;Adding a New White-Label Client&quot;">​</a></h2><p>To create a new white-labeled instance for another client:</p><ol><li><p>Clone the client app template:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>cp -r src/apps/client src/apps/new-client</span></span></code></pre></div></li><li><p>Update package.json with a new name:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@mara/new-client&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">  ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>Configure environment variables for the new client</p></li><li><p>Set up a new Netlify site for deployment</p></li><li><p>Customize branding elements as needed</p></li></ol><h2 id="common-issues-and-troubleshooting" tabindex="-1">Common Issues and Troubleshooting <a class="header-anchor" href="#common-issues-and-troubleshooting" aria-label="Permalink to &quot;Common Issues and Troubleshooting&quot;">​</a></h2><h3 id="styling-issues" tabindex="-1">Styling Issues <a class="header-anchor" href="#styling-issues" aria-label="Permalink to &quot;Styling Issues&quot;">​</a></h3><p>If components appear unstyled, ensure that Tailwind is configured correctly to scan shared components:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// In tailwind.config.js</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  content: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;./index.html&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;./**/*.{js,ts,jsx,tsx}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;../../shared/**/*.{js,ts,jsx,tsx}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h3 id="function-deployment" tabindex="-1">Function Deployment <a class="header-anchor" href="#function-deployment" aria-label="Permalink to &quot;Function Deployment&quot;">​</a></h3><p>For Netlify Functions, make sure:</p><ol><li><p>The netlify.toml has the proper functions configuration:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">functions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">directory = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;functions&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">node_bundler = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;esbuild&quot;</span></span></code></pre></div></li><li><p>Dependencies are correctly installed. While not strictly required with esbuild bundling, including a package.json in the functions directory can help manage dependencies explicitly.</p></li></ol><h3 id="environment-variables" tabindex="-1">Environment Variables <a class="header-anchor" href="#environment-variables" aria-label="Permalink to &quot;Environment Variables&quot;">​</a></h3><p>Ensure environment variables are correctly set in:</p><ul><li><code>.env</code> for local development</li><li>Netlify UI for production deployment</li></ul><h2 id="monorepo-management" tabindex="-1">Monorepo Management <a class="header-anchor" href="#monorepo-management" aria-label="Permalink to &quot;Monorepo Management&quot;">​</a></h2><p>The project uses NPM Workspaces and Turborepo for monorepo management:</p><ul><li><strong>NPM Workspaces</strong>: Defined in the root package.json to organize packages</li><li><strong>Turborepo</strong>: Configured in turbo.json for optimized builds and dependency management</li></ul><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Root package.json workspaces configuration</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;workspaces&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/apps/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/shared&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="future-architecture-considerations" tabindex="-1">Future Architecture Considerations <a class="header-anchor" href="#future-architecture-considerations" aria-label="Permalink to &quot;Future Architecture Considerations&quot;">​</a></h2><ol><li><strong>State Management</strong>: For more complex state, consider implementing Redux or Context API</li><li><strong>API Layer</strong>: Expand the API abstraction to handle more complex operations</li><li><strong>Testing</strong>: Add Jest and React Testing Library for component testing</li><li><strong>CI/CD</strong>: Enhance the build pipeline with automated testing</li><li><strong>TypeScript</strong>: Consider migrating to TypeScript for improved type safety</li></ol>`,81)]))}const g=a(t,[["render",l]]);export{u as __pageData,g as default};
