import{_ as s,c as e,o as a,ag as t}from"./chunks/framework.BONmpqY0.js";const u=JSON.parse('{"title":"MARA Deployment Guide","description":"","frontmatter":{},"headers":[],"relativePath":"guide/deployment.md","filePath":"guide/deployment.md"}'),l={name:"guide/deployment.md"};function n(o,i,p,r,h,d){return a(),e("div",null,i[0]||(i[0]=[t(`<h1 id="mara-deployment-guide" tabindex="-1">MARA Deployment Guide <a class="header-anchor" href="#mara-deployment-guide" aria-label="Permalink to &quot;MARA Deployment Guide&quot;">​</a></h1><p>This guide provides comprehensive instructions for deploying both the MARA applications and the documentation site.</p><h2 id="application-deployment" tabindex="-1">Application Deployment <a class="header-anchor" href="#application-deployment" aria-label="Permalink to &quot;Application Deployment&quot;">​</a></h2><h3 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h3><ul><li>Netlify account with appropriate permissions</li><li>Git repository access</li><li>Environment variables configured in Netlify</li></ul><h3 id="deploying-to-netlify" tabindex="-1">Deploying to Netlify <a class="header-anchor" href="#deploying-to-netlify" aria-label="Permalink to &quot;Deploying to Netlify&quot;">​</a></h3><p>MARA applications are deployed to Netlify following these steps:</p><ol><li><p><strong>Connect Repository to Netlify</strong>:</p><ul><li>Log in to Netlify</li><li>Click &quot;New site from Git&quot;</li><li>Select your Git provider (GitHub, GitLab, etc.)</li><li>Select the MARA repository</li><li>Configure build settings: <ul><li>For the main app: <ul><li>Build command: <code>npm run build -- --filter @mara/app</code></li><li>Publish directory: <code>src/apps/mara/dist</code></li></ul></li><li>For the client app: <ul><li>Build command: <code>npm run build -- --filter @mara/client</code></li><li>Publish directory: <code>src/apps/client/dist</code></li></ul></li></ul></li></ul></li><li><p><strong>Configure Environment Variables</strong>:</p><ul><li>In the Netlify site settings, go to &quot;Environment variables&quot;</li><li>Add all required environment variables (see Installation Guide)</li></ul></li><li><p><strong>Configure Netlify Functions</strong>:</p><ul><li>Ensure the <code>netlify.toml</code> file is correctly set up</li><li>Verify the functions directory is correctly specified</li><li>Configure function scheduling if needed</li></ul></li></ol><h3 id="manual-deployment" tabindex="-1">Manual Deployment <a class="header-anchor" href="#manual-deployment" aria-label="Permalink to &quot;Manual Deployment&quot;">​</a></h3><p>To manually trigger a deployment:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --filter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @mara/app</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">netlify</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deploy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --prod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dir=src/apps/mara/dist</span></span></code></pre></div><p>For the client app:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --filter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @mara/client</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">netlify</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deploy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --prod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dir=src/apps/client/dist</span></span></code></pre></div><h2 id="documentation-site-deployment" tabindex="-1">Documentation Site Deployment <a class="header-anchor" href="#documentation-site-deployment" aria-label="Permalink to &quot;Documentation Site Deployment&quot;">​</a></h2><p>The documentation site is deployed using GitHub Pages through a GitHub Actions workflow.</p><h3 id="using-github-actions" tabindex="-1">Using GitHub Actions <a class="header-anchor" href="#using-github-actions" aria-label="Permalink to &quot;Using GitHub Actions&quot;">​</a></h3><p>The repository is configured with a GitHub Actions workflow file that handles automatic deployment:</p><ol><li><p><strong>Push changes to the main branch</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Update documentation&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span></code></pre></div></li><li><p><strong>The workflow will</strong>:</p><ul><li>Set up Node.js</li><li>Install dependencies</li><li>Build the documentation site</li><li>Deploy to GitHub Pages</li></ul></li></ol><h3 id="manual-documentation-deployment" tabindex="-1">Manual Documentation Deployment <a class="header-anchor" href="#manual-documentation-deployment" aria-label="Permalink to &quot;Manual Documentation Deployment&quot;">​</a></h3><p>If you need to deploy the documentation manually:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs-vitepress</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><p>Then deploy the generated files in the <code>.vitepress/dist</code> directory to your hosting provider.</p><h2 id="scheduled-functions-configuration" tabindex="-1">Scheduled Functions Configuration <a class="header-anchor" href="#scheduled-functions-configuration" aria-label="Permalink to &quot;Scheduled Functions Configuration&quot;">​</a></h2><p>MARA includes several scheduled functions that need to be configured in Netlify:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Example from netlify.toml</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">functions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">directory = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;functions&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">node_bundler = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;esbuild&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Scheduled functions</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">functions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;collect-recaap&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">schedule = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0,30 * * * *&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">functions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;process-incidents&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">schedule = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;25,55 * * * *&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">functions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;deduplicate-cross-source-background&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">schedule = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;28 * * * *&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">background = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">functions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;get-weekly-report-content-background&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">schedule = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0 21 * * 1&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">background = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div><p>Ensure these schedules are configured correctly for your needs.</p><h2 id="adding-a-new-white-label-client" tabindex="-1">Adding a New White-Label Client <a class="header-anchor" href="#adding-a-new-white-label-client" aria-label="Permalink to &quot;Adding a New White-Label Client&quot;">​</a></h2><p>To deploy a new white-labeled client:</p><ol><li>Create the new client app as described in the Architecture documentation</li><li>Create a new Netlify site for this client</li><li>Configure the site with the appropriate build settings: <ul><li>Build command: <code>npm run build -- --filter @mara/new-client</code></li><li>Publish directory: <code>src/apps/new-client/dist</code></li></ul></li><li>Add client-specific environment variables</li><li>Deploy the site</li></ol><h2 id="post-deployment-verification" tabindex="-1">Post-Deployment Verification <a class="header-anchor" href="#post-deployment-verification" aria-label="Permalink to &quot;Post-Deployment Verification&quot;">​</a></h2><p>After deployment, verify that:</p><ol><li>The application loads correctly</li><li>All features are functioning properly</li><li>Scheduled functions are running as expected</li><li>Environment variables are correctly applied</li></ol><h2 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">​</a></h2><h3 id="common-deployment-issues" tabindex="-1">Common Deployment Issues <a class="header-anchor" href="#common-deployment-issues" aria-label="Permalink to &quot;Common Deployment Issues&quot;">​</a></h3><ol><li><p><strong>Build Failures</strong>:</p><ul><li>Check the build logs for specific errors</li><li>Verify all dependencies are correctly installed</li><li>Ensure environment variables are properly configured</li></ul></li><li><p><strong>Function Execution Errors</strong>:</p><ul><li>Check the Netlify function logs</li><li>Verify function permissions and environment variables</li><li>Test functions locally before deployment</li></ul></li><li><p><strong>CORS Issues</strong>:</p><ul><li>Ensure your CORS headers are correctly configured</li><li>Verify API endpoint permissions</li></ul></li><li><p><strong>Environment Variables</strong>:</p><ul><li>Double-check that all required variables are set</li><li>Ensure variable names match exactly what&#39;s expected in the code</li></ul></li></ol><h2 id="rollback-procedure" tabindex="-1">Rollback Procedure <a class="header-anchor" href="#rollback-procedure" aria-label="Permalink to &quot;Rollback Procedure&quot;">​</a></h2><p>If a deployment causes issues:</p><ol><li><p><strong>In Netlify</strong>:</p><ul><li>Go to the &quot;Deploys&quot; section for your site</li><li>Find the last working deployment</li><li>Click &quot;Publish deploy&quot; to roll back</li></ul></li><li><p><strong>For code</strong>:</p><ul><li>Git revert the problematic commit</li><li>Push the revert commit</li><li>Let Netlify automatically deploy the reverted code</li></ul></li></ol><h2 id="continuous-integration" tabindex="-1">Continuous Integration <a class="header-anchor" href="#continuous-integration" aria-label="Permalink to &quot;Continuous Integration&quot;">​</a></h2><p>For a more robust CI/CD pipeline:</p><ol><li>Set up branch previews in Netlify for testing before merging to main</li><li>Configure notification webhooks for deployment status</li><li>Add integration tests that run after deployment</li><li>Consider using Netlify split testing for gradual rollouts</li></ol>`,41)]))}const k=s(l,[["render",n]]);export{u as __pageData,k as default};
