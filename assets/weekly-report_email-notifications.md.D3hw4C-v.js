import{_ as i,c as t,o as a,ag as s}from"./chunks/framework.BONmpqY0.js";const k=JSON.parse('{"title":"Weekly Report Email Notifications","description":"","frontmatter":{},"headers":[],"relativePath":"weekly-report/email-notifications.md","filePath":"weekly-report/email-notifications.md"}'),n={name:"weekly-report/email-notifications.md"};function l(r,e,o,d,h,p){return a(),t("div",null,e[0]||(e[0]=[s(`<h1 id="weekly-report-email-notifications" tabindex="-1">Weekly Report Email Notifications <a class="header-anchor" href="#weekly-report-email-notifications" aria-label="Permalink to &quot;Weekly Report Email Notifications&quot;">​</a></h1><p>This document describes the automated email notification system for weekly reports, which sends alerts to subscribed users when new reports are available.</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>The Weekly Report Email Notification system is a scheduled serverless function that runs every Tuesday at 08:00 UTC, after the weekly report period has completed (Monday 21:00 UTC). It notifies subscribed users about the availability of the weekly report and provides a direct link to access it.</p><p>Key features:</p><ul><li>Automatic notification when weekly reports are ready</li><li>Consistent branding with flash reports</li><li>Support for both standard and client-branded links</li><li>Domain-based routing to appropriate report URLs</li><li>Opt-in subscription model</li></ul><h2 id="architecture" tabindex="-1">Architecture <a class="header-anchor" href="#architecture" aria-label="Permalink to &quot;Architecture&quot;">​</a></h2><p>The email notification system consists of:</p><ol><li><strong>Scheduled Function</strong>: <code>send-weekly-report-notification</code> runs every Tuesday at 08:00 UTC</li><li><strong>Test Function</strong>: <code>test-weekly-notification</code> for manual testing</li><li><strong>Supabase Integration</strong>: User subscription management</li><li><strong>SendGrid Integration</strong>: Email delivery service</li></ol><h2 id="implementation" tabindex="-1">Implementation <a class="header-anchor" href="#implementation" aria-label="Permalink to &quot;Implementation&quot;">​</a></h2><h3 id="scheduled-function" tabindex="-1">Scheduled Function <a class="header-anchor" href="#scheduled-function" aria-label="Permalink to &quot;Scheduled Function&quot;">​</a></h3><p>The <code>send-weekly-report-notification.js</code> function is scheduled to run automatically every Tuesday morning:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// netlify.toml configuration</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[functions.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;send-weekly-report-notification&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">schedule </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;0 8 * * 2&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Every Tuesday at 08:00 UTC</span></span></code></pre></div><p>The function:</p><ol><li>Determines the current reporting week (previous Monday to Monday)</li><li>Retrieves users who have opted in to weekly report notifications</li><li>Sends personalized emails with links to the appropriate report</li></ol><h3 id="user-subscription-management" tabindex="-1">User Subscription Management <a class="header-anchor" href="#user-subscription-management" aria-label="Permalink to &quot;User Subscription Management&quot;">​</a></h3><p>Users can subscribe to weekly report notifications through their account settings. Subscription preferences are stored in Supabase:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Fetch subscribed users from Supabase</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> supabase</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;users&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;id, email, first_name, last_name, preferences&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">eq</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;receive_weekly_reports&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="client-domain-handling" tabindex="-1">Client Domain Handling <a class="header-anchor" href="#client-domain-handling" aria-label="Permalink to &quot;Client Domain Handling&quot;">​</a></h3><p>For users with email domains that match the <code>CLIENT_DOMAINS</code> environment variable, the notification contains a link to the client-branded weekly report:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Determine which URL to use based on email domain</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> reportUrl;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (useClientBranding </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> clientReportUrl) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  reportUrl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">clientReportUrl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">yearWeekCode</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  reportUrl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">publicUrl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/weekly-report/\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">yearWeekCode</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="email-template" tabindex="-1">Email Template <a class="header-anchor" href="#email-template" aria-label="Permalink to &quot;Email Template&quot;">​</a></h3><p>The weekly notification emails follow the same design language as flash reports, creating a consistent user experience:</p><ul><li>Company logo and branding</li><li>Week number and date range</li><li>Brief description of the report contents</li><li>Direct link to the weekly report</li><li>Standard footer with legal text</li></ul><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><h3 id="environment-variables" tabindex="-1">Environment Variables <a class="header-anchor" href="#environment-variables" aria-label="Permalink to &quot;Environment Variables&quot;">​</a></h3><p>The notification system requires the following environment variables:</p><table tabindex="0"><thead><tr><th>Variable</th><th>Description</th><th>Example</th></tr></thead><tbody><tr><td><code>SENDGRID_API_KEY</code></td><td>SendGrid API key for email sending</td><td><code>SG.xxx...</code></td></tr><tr><td><code>SENDGRID_FROM_EMAIL</code></td><td>Email address to send from</td><td><code>alerts@example.com</code></td></tr><tr><td><code>PUBLIC_URL</code></td><td>Base URL for standard reports</td><td><code>https://mara.example.com</code></td></tr><tr><td><code>CLIENT_REPORT_URL</code></td><td>Base URL for client reports</td><td><code>https://client.example.com</code></td></tr><tr><td><code>CLIENT_DOMAINS</code></td><td>Comma-separated list of domains that should receive client-branded links</td><td><code>client.com,customer.org</code></td></tr><tr><td><code>DEFAULT_LOGO</code></td><td>URL to logo for email template</td><td><code>https://example.com/logo.png</code></td></tr><tr><td><code>DEFAULT_COMPANY_NAME</code></td><td>Company name for email template</td><td><code>MARA Maritime Risk Analysis</code></td></tr></tbody></table><h3 id="testing" tabindex="-1">Testing <a class="header-anchor" href="#testing" aria-label="Permalink to &quot;Testing&quot;">​</a></h3><p>A dedicated testing endpoint is available to verify email delivery and content:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Test email delivery</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./scripts/test-weekly-email.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://your-netlify-url.netlify.app&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;your-email@example.com&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;true&quot;</span></span></code></pre></div><p>Parameters:</p><ol><li>Netlify site URL</li><li>Test recipient email</li><li>Whether to send both standard and client versions for testing (optional, defaults to true)</li></ol><h2 id="database-schema" tabindex="-1">Database Schema <a class="header-anchor" href="#database-schema" aria-label="Permalink to &quot;Database Schema&quot;">​</a></h2><p>The user subscription preferences are stored in the Supabase <code>users</code> table:</p><table tabindex="0"><thead><tr><th>Column</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>id</code></td><td>UUID</td><td>Primary key</td></tr><tr><td><code>email</code></td><td>String</td><td>User&#39;s email address</td></tr><tr><td><code>first_name</code></td><td>String</td><td>User&#39;s first name</td></tr><tr><td><code>last_name</code></td><td>String</td><td>User&#39;s last name</td></tr><tr><td><code>receive_weekly_reports</code></td><td>Boolean</td><td>Whether the user has opted in to weekly reports</td></tr><tr><td><code>preferences</code></td><td>JSON</td><td>Additional user preferences</td></tr></tbody></table><h2 id="debugging-and-monitoring" tabindex="-1">Debugging and Monitoring <a class="header-anchor" href="#debugging-and-monitoring" aria-label="Permalink to &quot;Debugging and Monitoring&quot;">​</a></h2><p>Monitor the execution of the notification system through Netlify function logs:</p><ol><li>Check scheduled function execution in the Netlify dashboard</li><li>View logs for the <code>send-weekly-report-notification</code> function</li><li>For testing, view logs for the <code>test-weekly-notification</code> function</li></ol><h2 id="related-documentation" tabindex="-1">Related Documentation <a class="header-anchor" href="#related-documentation" aria-label="Permalink to &quot;Related Documentation&quot;">​</a></h2><ul><li><a href="./">Weekly Report Overview</a></li><li><a href="./date-handling.html">Date Handling</a> - How the weekly report period is determined</li><li><a href="./implementation.html">Implementation Guide</a> - General weekly report implementation</li></ul>`,41)]))}const u=i(n,[["render",l]]);export{k as __pageData,u as default};
