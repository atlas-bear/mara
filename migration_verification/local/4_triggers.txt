cser	incident	set_incident_reference_id	CREATE TRIGGER set_incident_reference_id BEFORE INSERT ON cser.incident FOR EACH ROW EXECUTE FUNCTION cser.generate_incident_reference_id()
cser	incident	tg_incident_flash_report	CREATE TRIGGER tg_incident_flash_report AFTER INSERT OR UPDATE ON cser.incident FOR EACH ROW EXECUTE FUNCTION cser.tg_incident_flash_report()
cser	incident	trigger_map_generation	CREATE TRIGGER trigger_map_generation AFTER INSERT OR UPDATE OF latitude, longitude, map_image_url ON cser.incident FOR EACH ROW EXECUTE FUNCTION cser.handle_map_generation()
cser	incident	update_incident_modtime	CREATE TRIGGER update_incident_modtime BEFORE UPDATE ON cser.incident FOR EACH ROW EXECUTE FUNCTION update_modified_column()
cser	raw_data	tg_raw_data_deduplicate	CREATE TRIGGER tg_raw_data_deduplicate AFTER INSERT ON cser.raw_data FOR EACH ROW EXECUTE FUNCTION cser.tg_raw_data_deduplicate()
cser	raw_data	tg_raw_data_process	CREATE TRIGGER tg_raw_data_process AFTER UPDATE OF processing_status ON cser.raw_data FOR EACH ROW WHEN ((new.processing_status = 'ready'::cser.processing_status)) EXECUTE FUNCTION cser.tg_raw_data_process()
cser	raw_data	update_raw_data_modtime	CREATE TRIGGER update_raw_data_modtime BEFORE UPDATE ON cser.raw_data FOR EACH ROW EXECUTE FUNCTION update_modified_column()
public	cache_metadata	update_cache_metadata_updated_at	CREATE TRIGGER update_cache_metadata_updated_at BEFORE UPDATE ON public.cache_metadata FOR EACH ROW EXECUTE FUNCTION update_updated_at_column()
public	email_categories	update_email_categories_updated_at	CREATE TRIGGER update_email_categories_updated_at BEFORE UPDATE ON public.email_categories FOR EACH ROW EXECUTE FUNCTION update_updated_at_column()
public	email_templates	update_email_templates_updated_at	CREATE TRIGGER update_email_templates_updated_at BEFORE UPDATE ON public.email_templates FOR EACH ROW EXECUTE FUNCTION update_updated_at_column()
public	user_email_preferences	update_user_email_preferences_updated_at	CREATE TRIGGER update_user_email_preferences_updated_at BEFORE UPDATE ON public.user_email_preferences FOR EACH ROW EXECUTE FUNCTION update_updated_at_column()
